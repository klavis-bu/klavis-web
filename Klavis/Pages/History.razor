@page "/history"

@using Google.Cloud.Firestore;
@using System;

<PageTitle>Access History</PageTitle>

<div class="flex-row">
    <div class="flex-controls">
        <RadzenDropDown AllowClear="true" TValue="int" Class="flex-dropdown " 
                        Data=@dispnums
                        Style="width: 40%; height: 2.5rem;"
                        @bind-Value=@displaysize />
    </div>
    
</div>


    

@if (accessHistory == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
    <div class = "row">
       <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>ID</th>
                <th>Terminal</th>
                <th>Timestamp</th>
                <th>Determination</th>
            </tr>
        </thead>
        <tbody>
            @for (int tablectr = 0; tablectr < displaysize; tablectr++)
            {
                    @if (tablectr >= accessHistory.Count){ continue; }
                    <tr>
                        <td>@(accessHistory[tablectr]["firstname"] + " " + accessHistory[tablectr]["lastname"])</td>
                        <td>@accessHistory[tablectr]["id"]</td>
                        <td>@accessHistory[tablectr]["terminal"]</td>
                        <td>@accessHistory[tablectr]["timestamp"]</td>
                        <td>@accessHistory[tablectr]["determination"]</td>
                    </tr>
            }
        </tbody>
    </table> 
            
    </div>
}

@code {

    FirestoreDb fireStoreDb = default!;
    private List<Dictionary<string, object>> accessHistory = default!;

    private int[] dispnums = { 5, 10, 25 };
    private int displaysize = 0;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            Console.WriteLine("Connecting");
            string filepath = "wwwroot/klavis-4b8d1-eb6f81dfbefe.json";
            Environment.SetEnvironmentVariable("GOOGLE_APPLICATION_CREDENTIALS", filepath);
            fireStoreDb = FirestoreDb.Create("klavis-4b8d1");
            
        });
        queryHistory("");
        StateHasChanged();
        
    }

    async void queryHistory(string terminal)
    {
        Google.Cloud.Firestore.Query historyQuery = fireStoreDb.Collection("history").WhereEqualTo("terminal",terminal);
        QuerySnapshot historyQuerySnapshot = await historyQuery.GetSnapshotAsync();
        List<Dictionary<string, object>> records = new List<Dictionary<string, object>>();
        foreach (DocumentSnapshot documentSnapshot in historyQuerySnapshot.Documents)
        {
            Dictionary<string, object> recordDictionary = documentSnapshot.ToDictionary();
            records.Add(recordDictionary);
        }
        accessHistory = records;
        StateHasChanged(); 


    }

    async void clearHistory()
    {
        QuerySnapshot snapshot = await fireStoreDb.Collection("history").Limit(64).GetSnapshotAsync();
        IReadOnlyList<DocumentSnapshot> documents = snapshot.Documents;
        while (documents.Count > 0)
        {
            foreach (DocumentSnapshot document in documents)
            {
                await document.Reference.DeleteAsync();
            }
            snapshot = await fireStoreDb.Collection("history").Limit(64).GetSnapshotAsync();
            documents = snapshot.Documents;
        }
        StateHasChanged();
    }
}
