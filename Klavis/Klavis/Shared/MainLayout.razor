@inherits LayoutComponentBase
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor _httpContextAccessor
@inject HttpClient Http
@using Google.Cloud.Firestore;
@using System;

<RadzenDialog></RadzenDialog>
<PageTitle>Klavis</PageTitle>

@if (User.Identity.Name != null)
{
<div class="page">
    
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <div class="top-row">
                <div style="margin-top: 5px;">
                    <img style="border-radius: 50%; width: 50px; height: 50px; border: 2px solid black; "src="@Avatar" />
                    <a style="color: #fff; margin-right: 10px;">@GivenName @Surname    </a>
                    <a class="ml-md-auto btn btn-primary"
                        style="background-color: darkred"
                        href="/Logout"
                        target="_top">Logout</a>
                </div>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
    
    
}
else
{
    <div style="display: flex;"> 
        <div style="margin: auto; margin-top: 10%">
            <img style="border-radius: 30%; width: 350px; height: 350px;  "src="klavis.png" />
        </div>
    </div>
    <div style="display: flex;">
        <div style="margin: auto; margin-top: 25px">
            <a class="ml-md-auto btn btn-primary"
            style="background-color: #3a0647"
            href="/Login"
            target="_top">Login</a>
        </div>
    </div>
    
}
   

    


@code {
    private ClaimsPrincipal User;
    private string GivenName = "";
    private string Surname = "";
    private string Avatar = "";

    
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        try
        {
            // Set the user to determine if they are logged in
            User = _httpContextAccessor.HttpContext.User;

            // Try to get the GivenName
            var givenName =
                _httpContextAccessor.HttpContext.User
                .FindFirst(ClaimTypes.GivenName);

            if (givenName != null)
            {
                GivenName = givenName.Value;
            }
            else
            {
                GivenName = User.Identity.Name;
            }

            // Try to get the Surname
            var surname =
                _httpContextAccessor.HttpContext.User
                .FindFirst(ClaimTypes.Surname);

            if (surname != null)
            {
                Surname = surname.Value;
            }
            else
            {
                Surname = "";
            }

            // Try to get Avatar
            var avatar =
            _httpContextAccessor.HttpContext.User
            .FindFirst("urn:google:image");

            if (avatar != null)
            {
                Avatar = avatar.Value;
            }
            else
            {
                Avatar = "";
            }

            
        }
        catch { }
    }
    
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void reload()
    {
        StateHasChanged();
    }


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}