@page "/history"

@using Google.Cloud.Firestore;
@using System;
@using Klavis.Models;

<PageTitle>Access History</PageTitle>

<h1>Access History</h1>
    
<p>This component displays all recorded access history based on location.</p>

@if (accessHistory == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Timestamp</th>
                <th>Name</th>
                <th>ID</th>
                <th>Access</th>
                <th>Account</th>
                <th>Determination</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Dictionary<string,object> record in accessHistory)
            {
                <tr>
                    <td>@record["timestamp"]</td>
                    <td>@(record["firstname"] + " " + record["lastname"])</td>
                    <td>@record["id"]</td>
                    <td>@record["accessStatus"]</td>
                    <td>@record["accountStatus"]</td>
                    <td>@record["determination"]</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    FirestoreDb fireStoreDb;
    private string security_key_path = "wwwroot/klavis-4b8d1-eb6f81dfbefe.json";
    private string userID;
    private string terminal;
    private string terminalList;
    private string firstName;
    private string lastName;
    private string picturePath;
    private string timestamp;
    private string connection = "Disconnected";
    private bool accessStatus;
    private bool accountStatus;
    private List<Dictionary<string, object>> accessHistory = null;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Connecting");
        string filepath = "wwwroot/klavis-4b8d1-eb6f81dfbefe.json";
        Environment.SetEnvironmentVariable("GOOGLE_APPLICATION_CREDENTIALS", filepath);
        fireStoreDb = FirestoreDb.Create("klavis-4b8d1");

        DocumentReference userRef = fireStoreDb.Collection("access").Document("designlab");
        DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();
        if (snapshot.Exists)
        {
            connection = "Connected";
        }
        query_history("designlab");
        StateHasChanged();
    }

    async void query_history(string terminal)
    {

        Google.Cloud.Firestore.Query historyQuery = fireStoreDb.Collection("history").WhereEqualTo("terminal",terminal);
        QuerySnapshot historyQuerySnapshot = await historyQuery.GetSnapshotAsync();
        List<Dictionary<string, object>> records = new List<Dictionary<string, object>>();
        foreach (DocumentSnapshot documentSnapshot in historyQuerySnapshot.Documents)
        {
            Dictionary<string, object> recordDictionary = documentSnapshot.ToDictionary();
            records.Add(recordDictionary);

            accessStatus = (bool) recordDictionary["accessStatus"];
            accountStatus = (bool) recordDictionary["accountStatus"];
            userID = (string) recordDictionary["id"];
            firstName = (string) recordDictionary["firstname"];
            lastName = (string) recordDictionary["lastname"];
            timestamp= (string) recordDictionary["timestamp"];
        }
        accessHistory = records;
        StateHasChanged(); 
        
        
            
    }
}
