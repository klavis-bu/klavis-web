@page "/edituser/{targetID}"

@using Google.Cloud.Firestore;
@using System;
@inject NavigationManager NavigationManager

<PageTitle>Edit User</PageTitle>

<h1>Edit User</h1>

Adjust information to edit an existing user.
<div class = "d-flex flex-row">
    <RadzenCard>

        <h3 class="mb-4">Personal Information</h3>    
        <div class = "row">
            <div class = "col">
                <RadzenTextBox @bind-Value=@firstName  Class="w-100" />
                <h5 class="mb-4">First Name*</h5>
            </div>
            <div class = "col">
                <RadzenTextBox @bind-Value=@lastName  Class="w-100" />
                <h5 class="mb-4">Last Name*</h5>
            </div>
        </div>
        <div class = "row">
            <div class = "col">
                <RadzenTextBox @bind-Value=@userId Placeholder="########" Class="w-100" />
                <h5 class="mb-4">ID*</h5>
            </div>
            <div class = "col">
                <RadzenTextBox @bind-Value=@email  Class="w-100" />
                <h5 class="mb-4">Email Address*</h5>
            </div>
        </div>
        <div class = "row">
            <div class = "col">
                <RadzenTextBox @bind-Value=@cardSerial  Class="w-100" />
                <h5 class="mb-4">Card Serial</h5>
            </div>
        </div>
        <div class = "row">
            <div class = "col">
                <RadzenTextBox @bind-Value=@pictureLink  Class="w-100" />
                <h5 class="mb-4">Picture Link</h5>
            </div>
        </div>
        <br />
        <h3 class="mb-4">Scan Card</h3> 
        
        <div class = "row">
            <div class = "col">
                <RadzenTextBox @bind-Value=@cardInput Type="password" Change=@parseInput Class="w-100" />
            </div>
        </div>
        <br />
        <div class = "row">
            <div class = "col">
                <button class="btn btn-primary" @onclick=@editUser>Submit</button>
            </div>
            <div class = "col">
                <button class="btn btn-primary" @onclick=@cancel>Cancel</button>
            </div>
        </div>
    </RadzenCard>
        
        
</div>
    



@code{
    FirestoreDb fireStoreDb;
    private string firstName;
    private string lastName;
    private string userId;
    private string email;
    private string pictureLink;
    private string cardInput;
    private string cardSerial;
    [Parameter]
    public string targetID{ get; set; }

    protected override void OnParametersSet()
    {
        //the param will be set now
        userId = targetID;
    }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Connecting");
        string filepath = "wwwroot/klavis-4b8d1-eb6f81dfbefe.json";
        Environment.SetEnvironmentVariable("GOOGLE_APPLICATION_CREDENTIALS", filepath);
        fireStoreDb = FirestoreDb.Create("klavis-4b8d1");

        DocumentReference userRef = fireStoreDb.Collection("users").Document(targetID);
        DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();
        if (snapshot.Exists)
        {
            Dictionary<string, object> userDictionary = snapshot.ToDictionary();
            firstName = (string) userDictionary["firstname"];
            lastName = (string) userDictionary["lastname"];
            pictureLink = (string) userDictionary["pictureLink"];
            email = (string) userDictionary["email"];
            cardSerial = (string)userDictionary["cardSerial"];

        }

        StateHasChanged();
    }

    async void editUser()
    {

        Dictionary<string, object> log = new Dictionary<string, object>
            {
                { "cardSerial", cardSerial },
                { "created", DateTime.UtcNow },
                { "email", email },
                { "firstname", firstName },
                { "lastname", lastName },
                { "pictureLink", pictureLink },
            };
            await fireStoreDb.Collection("users").Document(userId).UpdateAsync(log);
            NavigationManager.NavigateTo("/usermanagement");
    }

    void cancel(){
        NavigationManager.NavigateTo("/usermanagement");
    }

    void parseInput()
    {
        string[] inputArgs = cardInput.Split('|');
        cardSerial = inputArgs[1];
        userId = inputArgs[2];
        StateHasChanged();
    }
}