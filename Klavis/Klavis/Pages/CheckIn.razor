@page "/checkin"
@page "/"

@using Google.Cloud.Firestore;
@using System;

<PageTitle>Check In</PageTitle>

<div class="row">
    <h1>Check In   </h1>
</div>




<div class="row">
    <div class="col-md-6 col-lg-4 p-3">
        <RadzenCard>
            <b>@connection</b>
            <button class="btn btn-primary" @onclick=@connect>Connect</button>
        </RadzenCard>
    </div>

    <div class="col-xl-6">

        <RadzenCard >
            <div class="d-flex flex-row">
                <RadzenImage Path=@accessPicturePath Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                <RadzenImage Path=@picturePath Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                <div>
                    <div>Name</div>
                    <b role="status">@(firstName+" "+lastName)</b>
                    <div class="mt-3">BUID</div>
                    <b>@userID</b>
                </div>
            </div>
        </RadzenCard>
        <RadzenCard>
            
            <RadzenTextBox @bind-Value=@userID MaxLength="8" Change=@(args => sendQuery(args, "designlab")) Class="w-100" />
            
        </RadzenCard>
    </div>
</div>





@code {
    FirestoreDb fireStoreDb;
    private string security_key_path = "wwwroot/klavis-4b8d1-eb6f81dfbefe.json";
    private string userID;
    private string location = "designlab";
    private string terminalList;
    private string firstName;
    private string lastName;
    private string picturePath;
    private string accessPicturePath;
    private string connection = "Disconnected";
    private bool accountStatus;
    private bool accessStatus;



    async void connect()
    {
        Console.WriteLine("Connecting");
        Environment.SetEnvironmentVariable("GOOGLE_APPLICATION_CREDENTIALS", security_key_path);
        fireStoreDb = FirestoreDb.Create("klavis-4b8d1");

        DocumentReference userRef = fireStoreDb.Collection("access").Document("designlab");
        DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();
        if (snapshot.Exists)
        {
            connection = "Connected";
        }
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Connecting");
        string filepath = "wwwroot/klavis-4b8d1-eb6f81dfbefe.json";
        Environment.SetEnvironmentVariable("GOOGLE_APPLICATION_CREDENTIALS", filepath);
        fireStoreDb = FirestoreDb.Create("klavis-4b8d1");

        DocumentReference userRef = fireStoreDb.Collection("access").Document("designlab");
        DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();
        if (snapshot.Exists)
        {
            connection = "Connected";
        }
        StateHasChanged();
    }


    void OnError(UploadErrorEventArgs args, string name)
    {
        Console.WriteLine($"{args.Message}");
    }

    async void queryUser(string id)
    {
        DocumentReference userRef = fireStoreDb.Collection("users").Document(id);
        DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();
        if (snapshot.Exists)
        {
            Dictionary<string, object> userDictionary = snapshot.ToDictionary();
            firstName = (string) userDictionary["firstname"];
            lastName = (string) userDictionary["lastname"];
            picturePath = (string) userDictionary["pictureLink"];
            accountStatus = (bool) userDictionary["hascard"];
        }
        else
        {
            accountStatus = false;
            firstName = null;
            lastName = null;
            picturePath = null;
        }
        StateHasChanged();
    }

    async void queryAccess(string id, string terminal)
    {
        DocumentReference userRef = fireStoreDb.Collection("access").Document(terminal).Collection("users").Document(id);
        DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();
        if (snapshot.Exists)
        {
            accessStatus = true;
            accessPicturePath = "https://www.pngkey.com/png/detail/0-9585_check-mark-symbol.png";
        }
        else
        {
            accessStatus = false;
            accessPicturePath = "https://toppng.com/uploads/preview/check-mark-symbol-transparent-11547078495hj2jhwbhn4.png";
        }
        StateHasChanged();
    }

    async void sendQuery(string id, string terminal)
    {
        if(id.Length == 8)
        {
            queryUser(id);
            queryAccess(id, terminal);
        }


    }
}