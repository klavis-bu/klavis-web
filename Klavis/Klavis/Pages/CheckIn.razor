@page "/checkin"
@page "/"

@using Google.Cloud.Firestore;
@using System;

<PageTitle>Check In</PageTitle>

<div class="row">
    <h1>Check In   </h1>
</div>




<div class="row">
    <div class="col-md-6 col-lg-4 p-3">
        <RadzenCard>
            <b>@connection</b>
            <button class="btn btn-primary" @onclick=@connect>Connect</button>
        </RadzenCard>
    </div>

    <div class="col-xl-6">

        <RadzenCard >
            <div class="d-flex flex-row">
                <RadzenImage Path=@picturePath Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                <div>
                    <div>Name</div>
                    <b>@(firstName + " " + lastName)</b>
                    <b>@firstName</b>
                    <div class="mt-3">BUID</div>
                    <b>@userID</b>
                </div>
            </div>
        </RadzenCard>
        <RadzenCard>
            <RadzenTextBox @bind-Value=@userIDField MaxLength="8" Change=@(args => OnChange(args, "designlab")) Class="w-100" />
            
        </RadzenCard>
    </div>
</div>





@code {
    FirestoreDb fireStoreDb;
    string security_key_path = "/klavis-4b8d1-eb6f81dfbefe.json";
    string userIDField;
    string userID;
    string userSerial;
    string location = "designlab";
    string terminalList;
    string firstName = "first";
    string lastName = "last";
    string picturePath;
    string connection = "Disconnected";
    bool accessStatus;

    async void connect()
    {
        string filepath = "wwwroot/klavis-4b8d1-eb6f81dfbefe.json";
        Environment.SetEnvironmentVariable("GOOGLE_APPLICATION_CREDENTIALS", filepath);
        fireStoreDb = FirestoreDb.Create("klavis-4b8d1");

        DocumentReference userRef = fireStoreDb.Collection("access").Document("designlab");
        DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();

        if (snapshot.Exists)
        {
            connection = "Connected";
        }



    }

    void OnLocationChange(string value)
    {
        
    }

    void OnChange(string value, string location)
    {
        if (value.Length != 8)
        {
            
        }
        else
        {
            picturePath = "";
            userID = value;
            firstName = "";
            lastName = "";
            accessStatus = false;
            query_user(value, location);
        }
    }

    

    void OnError(UploadErrorEventArgs args, string name)
    {
        Console.WriteLine($"{args.Message}");
    }

    async void query_user(string userIDField, string terminalLocation)
    {
            
            DocumentReference userRef = fireStoreDb.Collection("access").Document(terminalLocation).Collection("users").Document(userIDField);
            DocumentSnapshot snapshot = await userRef.GetSnapshotAsync();
            userID = userIDField;
            if (snapshot.Exists)
            {
                Dictionary<string, object> userDictionary = snapshot.ToDictionary();
                firstName = userDictionary["firstname"];
                lastName = (string) userDictionary["lastname"];
                
            }
            else
            {
                firstName = "User not found.";
            }

    }
    

    async void query_locations()
    {
        
    }
}